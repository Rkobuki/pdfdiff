#!/usr/bin/env bash

# pdfdiff - Visualize and quantify differences between two PDF files.
# Copyright (C) 2024  Koutaro Mukai
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

set -euo pipefail
export LC_ALL=C

main() {
    local a="${A:-}"
    local b="${B:-}"
    local outdir="${OUTDIR:-}"
    mask="${MASK:-}"
    local dpi="${DPI:-150}"
    local color_addition="${ADDITION:-#4cae4f}"
    local color_deletion="${DELETION:-#ff5724}"
    local color_modification="${MODIFICATION:-#ffc105}"

    if [[ -z "$a" || -z "$b" || -z "$outdir" ]]; then
        echo "Usage: A=a.pdf B=b.pdf OUTDIR=out [MASK=mask.png] [DPI=150] pdfdiff" >&2
        exit 1
    fi

    mkdir -p "$outdir/"{a,b}

    make all --jobs 2 --file - <<EOF
.PHONY: all a b
all: a b
a:
	@gs -dBATCH -dNOPAUSE -dSAFER -sDEVICE=pngalpha -r${dpi} -sOutputFile="${outdir}/a/%03d.png" "${a}" >/dev/null
b:
	@gs -dBATCH -dNOPAUSE -dSAFER -sDEVICE=pngalpha -r${dpi} -sOutputFile="${outdir}/b/%03d.png" "${b}" >/dev/null
EOF

    local count_a count_b
    count_a=$(find "$outdir/a" -type f | wc -l)
    count_b=$(find "$outdir/b" -type f | wc -l)
    local max_count=$((count_a > count_b ? count_a : count_b))

    local files=()
    local makefile=""

    for i in $(seq -f "%03g" 1 "$max_count"); do
        local page_a="$outdir/a/$i.png"
        local page_b="$outdir/b/$i.png"
        local output="$outdir/$i.png"

        if [[ ! -f "$page_a" && -f "$page_b" ]]; then
            magick "$page_b" -alpha transparent -strip "$page_a"
        elif [[ -f "$page_a" && ! -f "$page_b" ]]; then
            magick "$page_a" -alpha transparent -strip "$page_b"
        fi

        if [[ -z "$mask" ]]; then
            mask=$(mktemp --suffix=.png)
            trap 'rm -f "$mask"' EXIT
            magick "$page_a" -alpha off -fill white -colorize 100% -strip "$mask"
        fi

        files+=("$output")
        makefile+=$(
            cat <<EOF
$output: $page_a $page_b
	@magick \
        \$< -strip -write mpr:in_a +delete \
        \$(word \$(words \$^), \$^) -strip -write mpr:in_b +delete \
        "${mask}" -strip -write mpr:in_mask +delete \
        \
        mpr:in_a -alpha extract -threshold 0 -write mpr:a_mask +delete \
        mpr:in_b -alpha extract -threshold 0 -write mpr:b_mask +delete \
        \
        mpr:b_mask mpr:a_mask -compose MinusSrc -composite \
        -colorspace sRGB -transparent black -fill "${color_addition}" -opaque white \
        mpr:in_mask -alpha Off -compose CopyOpacity -composite -transparent black -colorspace sRGB -write mpr:addition +delete \
        \
        mpr:a_mask mpr:b_mask -compose MinusSrc -composite \
        -colorspace sRGB -transparent black -fill "${color_deletion}" -opaque white \
        mpr:in_mask -alpha Off -compose CopyOpacity -composite -transparent black -colorspace sRGB -write mpr:deletion +delete \
        \
        mpr:a_mask mpr:b_mask -evaluate-sequence And -write mpr:a_and_b +delete \
        mpr:in_a mpr:a_and_b -compose CopyOpacity -composite -write mpr:a_temp +delete \
        mpr:in_b mpr:a_and_b -compose CopyOpacity -composite -write mpr:b_temp +delete \
        mpr:a_temp mpr:b_temp -compose Difference -composite -threshold 0 -alpha extract \
        -colorspace sRGB -transparent black -fill "${color_modification}" -opaque white \
        mpr:in_mask -alpha Off -compose CopyOpacity -composite -transparent black -colorspace sRGB -write mpr:modification +delete \
        \
        mpr:in_a -alpha set -channel A -evaluate multiply 0.2 +channel -write mpr:a_alpha +delete \
        mpr:in_b -alpha set -channel A -evaluate multiply 0.2 +channel -write mpr:b_alpha +delete \
        mpr:a_alpha mpr:b_alpha -compose Over -composite mpr:addition -composite mpr:deletion -composite mpr:modification -composite -write \$@ +delete \
        \
        mpr:addition -alpha extract -format "%[fx:mean*w*h]," -write info: +delete \
        mpr:deletion -alpha extract -format "%[fx:mean*w*h]," -write info: +delete \
        mpr:modification -alpha extract -format "%[fx:mean*w*h]" info: >\$(basename \$@).log
EOF
        )
        makefile+="\n"
    done

    makefile=$(echo -e ".PHONY: all ${files[@]}\nall: ${files[@]}\n$makefile")
    echo -e "$makefile" | make all --jobs $(nproc) --file -
}

main
